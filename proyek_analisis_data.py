# -*- coding: utf-8 -*-
"""Proyek Analisis Data.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ug4Ox4qIFDSo1koFA0XiNJE-ce12rECy

# Proyek Analisis Data: [Bike Sharing Dataset]
- **Nama:** [Faberian Diantama]
- **Email:** [m180b4ky1306@bangkit.academy]
- **ID Dicoding:** [dianta]

## Menentukan Pertanyaan Bisnis

- Apakah ada peran dari cuaca terhadap jumlah pengguna sepeda?
- Apakah ada pengaruh musim terhadap penyewa sepeda berdasarkan pelanggan Casual dan Registered?

## Import Semua Packages/Library yang Digunakan

Import library yang dibutuhkan
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

"""## Data Wrangling

### Gathering Data

Mengumpulkan data. Karena saya memilih Bike Sharing Dataset, maka saya mengimpor file day.csv dan hr.csv

**Load Tabel Day**
"""

day_df = pd.read_csv("/content/day.csv")
day_df.head()

"""**Load Tabel Hour**"""

hr_df = pd.read_csv("/content/hour.csv")
hr_df.head()

"""### Assessing Data

**Menilai day_df**

**1. Mengecek tipe data day_df**
"""

day_df.info()

"""Hasil: terdapat 1 data yang kolomnya tidak sesuai. Data yang perlu diperbaiki adalah: dteday -> datetime

**2. Mengecek apakah ada missing value**
"""

day_df.isna().sum()

"""Hasil: tidak ada missing value

**3. Mengecek apakah ada duplikat data**
"""

print("Jumlah duplikasi data: ", day_df.duplicated().sum())

"""Hasil: tidak ada duplikat data

**4. Mengecek apakah terdapat keanehan pada nilai statistiknya**
"""

day_df.describe()

"""Hasil: tidak ada keanehan

**Menilai hr_df**

1. mengecek info hr_df
"""

hr_df.info()

"""Hasil: terdapat 1 tipe data berdasarkan kolomnya yang tidak sesuai. Data yang perlu diperbaiki adalah: dteday -> datetime

2. Mengecek apakah ada missing value
"""

hr_df.isna().sum()

"""Hasil: tidak ada missing value

3. Mengecek apakah ada duplicate data
"""

print("Jumlah duplikasi data: ", hr_df.duplicated().sum())

"""4. Mengecek apakah terdapat keanehan pada nilai statistiknya"""

hr_df.describe()

"""Hasil: tidak ada keanehan

### Cleaning Data

1. menghapus tabel yang tidak diperlukan

tabel hr dihapus karena tidak relevan dengan pertanyaan
"""

del hr_df

"""2. menghapus beberapa kolom yang tidak digunakan

Berdasarkan pertanyaan bisnis yang sudah ada, maka untuk kolom yang akan didrop, yakni:

instant: Karena indeks catatan ini tidak memberikan informasi tambahan yang berguna.
windspeed: Tidak ada pertanyaan bisnis yang terkait dengan efek kecepatan angin terhadap jumlah penyewa sepeda.
"""

drop_col = ['instant', 'windspeed']

for i in day_df.columns:
  if i in drop_col:
    day_df.drop(labels=i, axis=1, inplace=True)

day_df.head()

"""3. mengubah beberapa detail tentang kolom

mengubah nama nama kolom agar lebih mudah dipahami. data numerikal akan saya ubah menjadi data kategorikal. Serta sebelumnya ada tipe data yang juga tidak sesuai, dan itu akan saya rubah juga.
"""

# Mengubah nama judul kolom
day_df.rename(columns={
    'dteday': 'dateday',
    'yr': 'year',
    'mnth': 'month',
    'weathersit': 'weather_cond',
    'cnt': 'count'
}, inplace=True)

day_df.head()

# Mengubah angka menjadi keterangan
day_df['month'] = day_df['month'].map({
    1: 'Jan', 2: 'Feb', 3: 'Mar', 4: 'Apr', 5: 'May', 6: 'Jun',
    7: 'Jul', 8: 'Aug', 9: 'Sep', 10: 'Oct', 11: 'Nov', 12: 'Dec'
})
day_df['season'] = day_df['season'].map({
    1: 'Spring', 2: 'Summer', 3: 'Fall', 4: 'Winter'
})
day_df['weekday'] = day_df['weekday'].map({
    0: 'Sun', 1: 'Mon', 2: 'Tue', 3: 'Wed', 4: 'Thu', 5: 'Fri', 6: 'Sat'
})
day_df['weather_cond'] = day_df['weather_cond'].map({
    1: 'Clear/Partly Cloudy',
    2: 'Misty/Cloudy',
    3: 'Light Snow/Rain',
    4: 'Severe Weather'
})

# Mengubah tipe data ke datetime
day_df['dateday'] = pd.to_datetime(day_df.dateday)

# Mengubaha tipe data ke categorical
day_df['season'] = day_df.season.astype('category')
day_df['year'] = day_df.year.astype('category')
day_df['month'] = day_df.month.astype('category')
day_df['holiday'] = day_df.holiday.astype('category')
day_df['weekday'] = day_df.weekday.astype('category')
day_df['workingday'] = day_df.workingday.astype('category')
day_df['weather_cond'] = day_df.weather_cond.astype('category')

day_df.head()

day_df.info()

"""## Exploratory Data Analysis (EDA)

### Explore Data day_df

1. kelompokkan penyewa sepeda (baik casual dan registered) berdasakan bulan
"""

day_df.groupby(by='month').agg({
    'count': ['max', 'min', 'mean', 'sum']
})

"""Hasil: rata rata dan jumlah terbesar = juni serta rata rata dan jumlah terkecil = januari

2. kelompokkan penyewa sepeda (baik casual dan registered) berdasarkan keadaan cuaca
"""

day_df.groupby(by='weather_cond').agg({
    'count': ['max', 'min', 'mean', 'sum']
})

"""Hasil:
1. penyewa sepeda kebanyakan menyewa saat cuca curah atau mendung
2.  penyewa sepeda sedikit ketika salju turun
3. tidak ada penyewa saat cuaca buruk

3. kelompokkan penyewa sepeda (baik casual maupun registered) berdasarkan holiday
"""

day_df.groupby(by='holiday').agg({
    'count': ['max', 'min', 'mean', 'sum']
})

"""Hasil: penyewa suka saat hari biasa

4. bandingkan penyewa sepeda pada saat hari kerja (weekday) vs akhir pekan (weekend)
"""

day_df.groupby(by='weekday').agg({
    'count':['max','min','mean']
})

"""Hasil: urutan dari yang terbesan ke yang terkecil, yaitu: jumat, kamis, sabtu, rabu, selasa, senin, dan minggu

5. kelompokkan penyewa sepeda (baik casual dan registered) berdasarkan workingday
"""

day_df.groupby(by='workingday').agg({
    'count': ['max', 'min', 'mean']
})

"""Hasil: jumlah penyewa terbesar pada workingday dibanding non-workingday (perbedaan tidak banyak)

6. kelompokkan penyewa sepeda (baik casual dan registered) berdasarkan season
"""

day_df.groupby(by='season').agg({
    'casual': 'mean',
    'registered': 'mean',
    'count': ['max', 'min', 'mean']
})

"""Hasil: penyewa paling banyak pada musim gugur (fall) sedangkan penyewa paling sedikit pada musim semi (spring)

7. kelompokkan temp, hum, dan humidity berdasarkan season
"""

day_df.groupby(by='season').agg({
    'temp': ['max', 'min', 'mean'],
    'atemp': ['max', 'min', 'mean'],
    'hum': ['max', 'min', 'mean']
})

"""Hasil:
1. Rata-rata temperatur dan atemp tertinggi terjadi pada musim gugur (fall season) yang selanjutnya diikuti oleh summer, winter, dan spring.
2. Rata-rata humidity tertinggi terjadi pada musim terjadi pada musim dingin (winter season) yang selanjutnya diikuti oleh fall, summer, dan spring.

8. Hubungan antara penyewa casual, registered, dan count
"""

fig, ax = plt.subplots(figsize=(10,6))
correlation_matrix = day_df.corr(numeric_only=True)
mask = np.triu(np.ones_like(correlation_matrix, dtype=bool))

sns.heatmap(
    correlation_matrix,
    annot=True,
    mask=mask,
    cmap="coolwarm",
    center=0,
    fmt=".2f")
plt.title("Correlation Heatmap")
plt.show()

"""Berdasarkan hasil analisis diatas, didapat pernyataan sebagai berikut:

1. atemp dan temp sangat berkorelasi (0.99).
2. hum memiliki korelasi lemah dengan temp dan atemp (0.13 dan 0.14).
3. casual cukup berkorelasi dengan temp dan atemp (0.54), dan sedikit negatif dengan hum (-0.08).
4. registered memiliki pola yang sama seperti casual, dan berkorelasi moderat dengan casual (0.40).
5. count berkorelasi kuat dengan temp, atemp, casual, dan registered (0.63, 0.63, 0.67, dan 0.95), dan sedikit negatif dengan hum (-0.10).

## Visualization & Explanatory Analysis

### Pertanyaan 1: Apakah ada peran cuaca terhadap jumlah pengguna sepeda?
"""

plt.figure(figsize=(10,6))
sns.barplot(
    x='weather_cond',
    y='count',
    data=day_df)

plt.title('Jumlah Pengguna Sepeda berdasarkan Kondisi Cuaca')
plt.xlabel('Kondisi Cuaca')
plt.ylabel('Jumlah Pengguna Sepeda')
plt.show()

"""Berdasarkan visualisasi data menggunakan boxplot, dapat disimpulkan bahwa terdapat hubungan antara kondisi cuaca dan jumlah penyewa sepeda. Kondisi cuaca yang cerah atau setengah mendung adalah yang paling banyak diminati, diikuti oleh cuaca berkabut atau mendung. Sementara itu, penyewaan sepeda paling sedikit terjadi saat cuaca sedikit bersalju atau hujan.

### Pertanyaan 2: Apakah ada pengaruh musim terhadap penyewa sepeda berdasarkan pelanggan Casual dan Registered?
"""

# Mengelompokkan data berdasarkan musim dan menghitung jumlah penggunaan terdaftar dan tidak terdaftar
seasonal_usage = day_df.groupby('season')[['registered', 'casual']].sum().reset_index()

plt.figure(figsize=(10, 6))

# Membuat
plt.bar(
    seasonal_usage['season'],
    seasonal_usage['registered'],
    label='Registered',
    color='tab:blue'
)

plt.bar(
    seasonal_usage['season'],
    seasonal_usage['casual'],
    label='Casual',
    color='tab:orange'
)

plt.xlabel(None)
plt.ylabel(None)
plt.title('Jumlah penyewaan sepeda berdasarkan musim')
plt.legend()
plt.show()

"""Berdasarkan analisis menggunakan barplot, dapat disimpulkan bahwa musim yang paling disukai oleh pengguna sepeda (baik Casual maupun Registered) adalah musim gugur (Fall), diikuti oleh musim panas (Summer). Sementara itu, musim dingin (Winter) berada di urutan ketiga, dan yang paling sedikit diminati adalah musim semi (Spring).

## Conclusion

- Conclution pertanyaan 1: Terdapat hubungan yang jelas antara keduanya. Penyewa sepeda sangat menyukai cuaca Cerah atau Sedikit Mendung, yang ditunjukkan dengan Q3 di atas 6000, Q1 di bawah 4000, dan median hampir mencapai 5000. Posisi kedua diisi oleh cuaca Berkabut atau Mendung, dengan Q3 di atas 5000, Q1 di bawah 3000, dan median di atas 4000. Sementara itu, pengguna kurang menyukai cuaca Sedikit Bersalju atau Hujan, yang memiliki Q3 di atas 2000, Q1 di bawah 1000, dan median di atas 1000. Selain itu, tidak ada data untuk kondisi cuaca Badai Besar, karena bersepeda dalam keadaan tersebut memang tidak memungkinkan.

- Conclution pertanyaan 2: Pada visualisasi terakhir, hasil yang diperoleh cukup mengejutkan, di mana musim dingin (Winter) bukanlah yang terakhir, melainkan musim semi (Spring) yang menduduki posisi tersebut. Hal ini mungkin disebabkan oleh berbagai faktor, seperti kondisi cuaca, temperatur udara, hari kerja, hari libur, dan lainnya. Sementara itu, posisi pertama diisi oleh musim gugur (Fall), yang berhasil mencapai jumlah penyewaan sepeda lebih dari 800.000.
"""